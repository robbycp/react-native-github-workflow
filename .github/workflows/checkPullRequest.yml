name: Check Pull Request

on:
  pull_request:
    types: [assigned, opened, synchronize, reopened]
    branches-ignore: [main]

jobs:
  checkPullRequest:
    name: Check Pull Reqest Dev and Release, create if not exist
    runs-on: ubuntu-latest
    steps:
      - name: Check pull request dev details
        uses: actions/github-script@v5
        with:
          script: |
            console.log('repo dev details', context)
            const message = ''
            // Check title
            const title = context.payload.pull_request.title
            const prefix = title.split('-')[0]
            if (!['fix', 'modify', 'feature', 'breaking'].includes(prefix)) {
              message.concat('Prefix must be fix|modify|feature|breaking')
            }
            // Check label
            const labels = context.payload.pull_request.labels
            if (!labels.includes('QAPassed')) {
              message.concat(', must have label QA passed')
            }
            core.setFailed(message)

      - name: Get pull request release details
        id: getPullRequestRelease
        uses: actions/github-script@v5
        with:
          script: |
            console.log('repo release details', context)
            const variableList = {
              owner: context.actor,
              repo: context.repo.repo,
              state: 'open',
              base: 'main',
            }
            console.log('variableList', variableList)
            const pullRequestReleases = await github.rest.pulls.list(variableList)
            console.log('pullRequestReleases', pullRequestReleases)
            if (pullRequestReleases.length > 0 && pullRequestReleases[0].labels.includes('lockDeploys')) {
              core.setFailed('Pull Request release has label lockDeploys')
            }

      - uses: actions/checkout@v2
      - name: Set username
        run: |
          git config user.name 'Robby Putra'
          git config user.email 'robbycp@users.noreply.github.com'
      - name: Create pull request release
        id: createPullRequestRelease
        if: ${{ steps.getPullRequestRelease.outputs[0] == null }}
        uses: actions/github-script@v5
        with:
          script: |
            // Check if there is no changes between branch staging and main
            const repoMainData = await github.rest.repos.getBranch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              branch: 'main',
            })
            const repoStagingData = await github.rest.repos.getBranch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              branch: 'staging',
            })
            console.log('repoMainData', repoMainData)
            console.log('repoStagingData', repoStagingData)
            if (repoMainData.data.commit.sha === repoStagingData.data.commit.sha) {
              return {
                isMainAndStagingSame: true
              }
            }

            const today = new Date().toDateString()
            const createdPR = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: 'staging',
              base: 'main',
              title: `Release ${today}`,
              body: `
                ## Fix:
                ## Feature:
                ## Modify:
                ## Breaking:
              `
            })
            console.log('createdPR', createdPR)
            return createdPR

