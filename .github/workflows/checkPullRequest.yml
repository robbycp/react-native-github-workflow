name: Check Pull Request

on:
  pull_request:
    types: [assigned, opened, synchronize, reopened]
    branches-ignore: [main]

jobs:
  getOrCreatePullRequest:
    name: Get Pull Reqest Dev and Release, create if not exist
    runs-on: ubuntu-latest
    steps:
      - name: Get pull request dev details
        id: getPullRequestDev
        uses: actions/github-script@v5
        with:
          script: |
            console.log('repo dev details', context)
            return {
              ...context.payload.pull_request,
            }

      - name: Get pull request release details
        id: getPullRequestRelease
        uses: actions/github-script@v5
        with:
          script: |
            console.log('repo release details', context)
            const variableList = {
              owner: context.actor,
              repo: context.repo.repo,
              state: 'open',
              base: 'main',
            }
            console.log('variableList', variableList)
            const pullRequestReleases = await github.rest.pulls.list(variableList)
            console.log('pullRequestReleases', pullRequestReleases)
            return pullRequestReleases.data

      - uses: actions/checkout@v2
      - name: Set username
        run: |
          git config user.name 'Robby Putra'
          git config user.email 'robbycp@users.noreply.github.com'
      - name: Create pull request release
        if: ${{ steps.getPullRequestRelease.outputs[0] != 0 }}
        uses: actions/github-script@v5
        with:
          script: |
            const today = new Date().toDateString()
            const createdPR = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: 'staging',
              base: 'main',
              title: `Release ${today}`,
              draft: true,
              body: `
                ## Fix:
                ## Feature:
                ## Modify:
                ## Breaking:
              `
            })
            console.log('createdPR', createdPR)

  checkPullRequestDev:
    name: Check Pull Request Dev
    needs: ['getOrCreatePullRequest']
    runs-on: ubuntu-latest
    steps:
      - name: Check pull request dev label
        if: ${{ !contains(fromJSON('["QAPassed"]'), steps.getPullRequestDev.outputs.pr_labels) }}
        run: exit 1

      - name: Check pull request dev title
        uses: actions/github-script@v5
        with:
          script: |
            console.log('steps.getPullRequestDev', steps.getPullRequestDev)
            const prefix = steps.getPullRequestDev.outputs.title.split('-')[0]
            if (!['fix', 'modify', 'feature', 'breaking'].includes(prefix)) {
              core.setFailed('Prefix title should be fix | modify | feature | breaking')
            }

  checkPullRequestRelease:
    name: Check Pull Request Release
    needs: ['getOrCreatePullRequest']
    runs-on: ubuntu-latest
    steps:
      - name: Check pull request release label
        if: ${{ !contains(fromJSON('["fixStaging"]'), steps.getPullRequestRelease.outputs.pr_labels) }}
        uses: actions/github-script@v5
        with:
          script: |
            console.log('steps.getPullRequestRelease', steps.getPullRequestRelease)
            if (steps.getPullRequestRelease.labels.includes('lockDeploys')) {
              core.setFailed('Pull Request release has label lockDeploys')
            }
