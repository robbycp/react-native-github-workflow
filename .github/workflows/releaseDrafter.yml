name: Release Drafter

on:
  push:
    # branches to consider in the event; optional, defaults to all
    branches:
      - master
  # pull_request event is required only for autolabeler
  pull_request:
    # Only following types are handled by the action, but one can default to all as well
    types: [opened, reopened, synchronize]

jobs:
  update_release_draft:
    runs-on: ubuntu-latest
    steps:
      # Drafts your next Release notes as Pull Requests are merged into "master"
      - uses: release-drafter/release-drafter@v5
        # (Optional) specify config name to use, relative to .github/. Default: release-drafter.yml
        # with:
        #   config-name: my-config.yml
        #   disable-autolabeler: true
        with:
          name-template: 'v$RESOLVED_VERSION 🌈'
          tag-template: 'v$RESOLVED_VERSION'
          categories:
            - title: '🚀 Features'
              labels:
                - 'feature'
                - 'enhancement'
                - 'modify'
            - title: '🐛 Bug Fixes'
              labels:
                - 'fix'
                - 'bugfix'
                - 'bug'
            - title: '🧰 Breaking'
              label: 'breaking'
          change-template: '- $TITLE @$AUTHOR (#$NUMBER)'
          change-title-escapes: '\<*_&' # You can add # and @ to disable mentions, and add ` to disable code blocks.
          autolabeler:
            - label: 'fix'
              title:
                - '/fix/i'
            - label: 'modify'
              title:
                - '/modify/i'
            - label: 'feature'
              title:
                - '/feature/i'
            - label: 'breaking'
              title:
                - '/breaking/i'
          version-resolver:
            major:
              labels:
                - 'major'
            minor:
              labels:
                - 'minor'
            patch:
              labels:
                - 'patch'
            default: patch
          template: |
            ## Changes

            $CHANGES
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}